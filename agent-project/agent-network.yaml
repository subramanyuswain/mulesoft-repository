schemaVersion: 1.0.0
label: Agent Network 1
brokers:
    broker1:
        card:
            protocolVersion: 0.3.0
            name: Broker 1
            description: Provide a description for your broker, such as "This broker provides all capabilities...".
            url: ${ingressgw.url}/broker1
            capabilities:
                pushNotifications: true
            version: 1.0.0
            securitySchemes: {}
            defaultInputModes:
                - Provide one or more media types, such as "application/json" or "text/plain".
            defaultOutputModes:
                - Provide one or more media types, such as "application/json" or "text/plain".
            skills:
                - id: Provide an id for a skill. For example, "weather".
                  name: Provide a name for a skill. For example, "Returns the weather for a given location".
                  description: Provide a description for this skill. For example, "Get the weather conditions for a specified location".
                  examples:
                      - Provide an example for what this skill can be leveraged to do. For example "What is the weather like in New York".
                  inputModes:
                      - Provide one or more media types, such as "application/json" or "text/plain".
                  outputModes:
                      - Provide one or more media types, such as "application/json" or "text/plain".
                  tags: []
        spec:
            llm:
                ref:
                    name: open-ai
                configuration:
                    model: gpt-5-mini
            instructions:
                - Instructions
            links:
                - agent:
                      ref:
                          name: agent1
            tools:
                - mcp:
                      ref:
                          name: mcpServer1
agents:
    agent1:
        label: Agent 1
        metadata:
            protocol: a2a
            platform: Bedrock
mcpServers:
    mcpServer1:
        label: MCP Server 1
        metadata:
            transport:
                kind: streamableHttp
                path: /mcp
llmProviders:
    open-ai:
        label: OpenAI
        description: OpenAI LLM Provider
        metadata:
            platform: OpenAI
connections:
    agent1Connection:
        kind: agent
        ref:
            name: agent1
        spec:
            url: ${agent1.cardUrl}
    mcpServer1Connection:
        kind: mcp
        ref:
            name: mcpServer1
        spec:
            url: ${mcpServer1.url}
    my-open-ai-connection:
        kind: llm
        ref:
            name: open-ai
        spec:
            url: http://api.openai.com/v1/
            configuration:
                apiKey: ${openai.apiKey}
                timeout: 600000
